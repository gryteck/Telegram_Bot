import random

from config import settings
from db.schemas import SUser

hello_text = "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–∫–∏—Ä–∞, —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –¥–ª—è —Ç–µ–±—è –ª—é–¥–µ–π –∏–∑ –ú–æ—Å–∫–≤—ã"

menu_main_text = '1. –ü–æ–≥–Ω–∞–ª–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è o(>œâ<)o \n' \
                 '2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞ (* ^ œâ ^) \n' \
                 '3. –ë–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –Ω–µ –∏—â—É Ôºº(¬∫ ‚ñ° ¬∫ l|l)/'

my_form_text = '1. –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –≤—Å—ë —Å –Ω—É–ª—è („Éª‰∫∫„Éª)\n' \
               '2. –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ (* ^ œâ ^)\n' \
               '3. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–∫–∞—Ä—Ç–æ—á–∫—É Ôºº(‚âß‚ñΩ‚â¶)Ôºè\n' \
               '4. –ü–æ–≥–Ω–∞–ª–∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è o(>œâ<)o'

del_form = "–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞(\n" \
           "–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å –Ω–∞ –º–µ–Ω—è. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É /start"

info = "–ê—Ä–∏–≥–∞—Ç–æ! –Ø –ê–∫–∏—Ä–∞ - –±–æ—Ç –ø–æ –ø–æ–∏—Å–∫—É –¥—Ä—É–∑–µ–π –∏–∑ –ú–æ—Å–∫–≤—ã\n" \
       "–ë—É–¥—å—Ç–µ –∑–¥–æ—Ä–æ–≤—ã, –ª—é–±–∏—Ç–µ —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö\n\n" \
       "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –Ω–∞—Å –≤ " + f'<a href="{settings.PROMO_URL}">—Ç–µ–ª–µ–≥—Ä–∞–º</a>'

ban = "1. –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∏ —à–∞–Ω—Ç–∞–∂ (ÔºÉÔºûÔºú)\n" \
      "2. –ü–æ—Ä–Ω–æ –±–µ–∑ —Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π (Ôø¢_Ôø¢;)\n" \
      "3. –ü–µ—Ä–µ–¥–∞—Ç—å –ª–∏—á–Ω—É—é –∂–∞–ª–æ–±—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É\n" \
      "4. –ó–∞–±–µ–π, –ø–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è o(>œâ<)o"

claim_text = "–ù–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Å–≤–æ—é –∂–∞–ª–æ–±—É. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Å –Ω–µ–π –æ–∑–Ω–∞–∫–æ–º—è—Ç—Å—è"

no_found = "–ú–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞—Ä—ã –¥–ª—è —Ç–µ–±—è („Éª‰∫∫„Éª)"

form = "–í–æ—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞: "

age_out_of_range = "–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç 18 –¥–æ 35 –ª–µ—Ç"

text_out_of_range = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤ 400 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞"
text_not_meaningful = "–¢–∞–∫ –Ω–µ –ø–æ–π–¥–µ—Ç, –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–µ–π"

invalid_answer = "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"

set_gender = "–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É!\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª"

ban_thq = "–°–ø–∞—Å–∏–±–æ, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø—Ä–∞–≤–∏–º —Å–∏—Ç—É–∞—Ü–∏—é!"

notice = "–≠—Ç–æ —Å–æ–≤–µ—Ç –æ—Ç –ê–∫–∏—Ä—ã - –∫–∞–∫ –Ω–µ —Å—Ç–∞—Ç—å –∂–µ—Ä—Ç–≤–æ–π –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤? –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ –∫–æ–≥–¥–∞ –ø–æ—Å–ª–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞:\n" \
         "- —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç –ø—Ä–∏—Å–ª–∞—Ç—å –ª–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–Ω—Ç–∏–º–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞.–ò—Ö –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è.\n" \
         "- —Ç–µ–±–µ –ø—Ä–∏—Å–ª–∞–ª–∏ —Å—Å—ã–ª–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n" \
         "- —Ç–µ–±—è –ø—Ä–æ—Å—è—Ç –æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–Ω–µ–≥ –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä –±–∏–ª–µ—Ç—ã –≤ –∫–∏–Ω–æ/—Ç–µ–∞—Ç—Ä.\n" \
         "- —Ç–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –≤—ã–≥–æ–¥–Ω—É—é —Å–¥–µ–ª–∫—É, –ø–ª–∞—Ç–Ω—ã–µ, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏ –¥—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏."

instruction = "–ù–µ–±–æ–ª—å—à–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±–æ—Ç—É. –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—ã, —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ - –æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –Ω–∏—Ö:\n" \
              "‚ù§Ô∏è - –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —á–µ–ª–æ–≤–µ—á–µ–∫\n" \
              "üëé - –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è —á–µ–ª–æ–≤–µ—á–µ–∫\n" \
              "üö´ - –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞\n\n" \
              "–ï—Å–ª–∏ —Ç–æ—Ç, –∫–æ–≥–æ —Ç—ã –ª–∞–π–∫–Ω—É–ª –æ—Ç–≤–µ—Ç–∏—Ç –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é - —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n" \
              "(–ê–Ω–∫–µ—Ç—ã –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è –∏–∑-–∑–∞ –º–∞–ª–µ–Ω—å–∫–æ–π –±–∞–∑—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞–±–∏—Ä–∞–µ—Ç –æ–±–æ—Ä–æ—Ç—ã)"


def warning(action: str, f: SUser):
    if action == 'image':
        res = '—Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –æ–Ω–∞'
    else:
        res = '–æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ, –æ–Ω–æ'

    res = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n- {f.name}! –ü—Ä–æ—Å–∏–º –≤–∞—Å –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å {res} –Ω–∞—Ä—É—à–∞–µ—Ç " \
          "–ø–æ–ª–∏—Ç–∏–∫—É –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.\n\n"
    if f.gender == '–î–µ–≤—É—à–∫–∞':
        res += "–í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã –Ω–∞–ø—Ä–∞–≤–∏–º –∫ –í–∞–º –Ø–∫—É–¥–∑—É!"
    else:
        res += "–î–æ —Ç–µ—Ö –ø–æ—Ä –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∏–∫–æ–º—É –≤–∏–¥–Ω–∞"
    return res


def delete_q(a: SUser) -> str:
    if a.gender == "–ü–∞—Ä–µ–Ω—å":
        return f"{a.name}, —Ç—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–∫–∏–Ω—É—Ç—å –Ω–∞—Å? (Œº_Œº) \n\n" \
               f"‚ùó–¢–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ª–∞–π–∫–Ω—É—Ç—å\n‚ùó–¢–µ, –∫–æ–≥–æ —Ç—ã –ª–∞–π–∫–∞–ª, –Ω–µ —Å–º–æ–≥—É—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é("
    elif a.gender == "–î–µ–≤—É—à–∫–∞":
        return f"{a.name}, —Ç—ã —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–∫–∏–Ω—É—Ç—å –Ω–∞—Å? (Œº_Œº) \n\n" \
               f"‚ùó–¢–µ–±—è –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ª–∞–π–∫–Ω—É—Ç—å\n‚ùó–¢–µ, –∫–æ–≥–æ —Ç—ã –ª–∞–π–∫–∞–ª–∞, –Ω–µ —Å–º–æ–≥—É—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é("


def set_interest() -> str:
    return random.choice(["–ö—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", "–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å?"])


def set_name() -> str:
    return random.choice(["–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", "–ú–æ–∂–Ω–æ —Ç–≤–æ–µ –∏–º—è?", "–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è"])


def reply_name(name: str) -> str:
    return random.choice([f"Damn, –∫–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è, {name}!",
                          f"–†–∞–¥–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É, {name}!",
                          f"–°—É–ø–µ—Ä, –±—É–¥—É –∑–≤–∞—Ç—å —Ç–µ–±—è {name}!"])


def enough() -> str:
    return random.choice(["–ù–∞ —Å–µ–≥–æ–¥–Ω—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ø—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞",
                          "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç, –∂–¥—É —Ç–µ–±—è –∑–∞–≤—Ç—Ä–∞!",
                          "–ü—Ä–æ–¥–æ–ª–∂–∏—à—å –∑–∞–≤—Ç—Ä–∞, –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å–µ)"])


def set_text(text: str = None) -> str:
    description = "–¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ, –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∏ —á–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è"
    if text:
        return description + "\n-----------\n–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç: " + text
    else:
        return description


current_photo = "–í–æ—Ç —Ç–≤–æ—ë —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–π –Ω–æ–≤–æ–µ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –µ–≥–æ –æ–±–Ω–æ–≤–∏—Ç—å"


def set_photo() -> str:
    photo_rules = "\n\n" \
                  "üîû–ù–∏–∫–∞–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ 18+\n" \
                  "üö´–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π —á—É–∂–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n" \
                  "üö´Ô∏è–ù–∏–∫–∞–∫–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n" \
                  "‚úÖ–¢–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, —Ö–æ—Ä–æ—à–æ –æ—Å–≤–µ—â–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ\n\n" \
                  "‚ùó–ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
    return random.choice(["–û—Ç–ø—Ä–∞–≤–ª—è–π —Å–≤–æ–µ —Ñ–æ—Ç–æ!", "–ñ–¥—É –æ—Ç —Ç–µ–±—è —Ñ–æ—Ç–∫—É"]) + photo_rules


def like_match() -> str:
    return random.choice(["–£ —Ç–µ–±—è –ø—Ä–æ–∏–∑–æ—à–µ–ª –º—ç—Ç—á! ", "–í–∞—É, –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è!"])


def ad() -> str:
    return random.choice([
        f"–ê —Ç—ã –≤ –∫—É—Ä—Å–µ –ø—Ä–æ –Ω–∞—à–∏ <a href='{settings.PROMO_URL}'>–∞–∑–∏–∞—Ç—Å–∫–∏–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏</a> –≤ –ú–æ—Å–∫–≤–µ? "
        f"–¢—É—Å–∏–º –∫–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É, –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏",
        f"–í —ç—Ç—É —Å—É–±–±–æ—Ç—É –≥–æ—Ä–æ–¥ –∑–∞—Å–Ω–µ—Ç –∏ —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ —Ç—É—Å–µ—Ä—ã –∑–∞—Å—Ç–∞–Ω—É—Ç <a href='{settings.PROMO_URL}'>–ê–ó–ò–Ø –ü–ê–¢–ò</a>!",
        f"–ë–æ–ª—å—à–µ, —á–µ–º –ø—Ä–æ—Å—Ç–æ –∞–∑–∏–∞—Ç—Å–∫–∏–µ –≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ –ú–æ—Å–∫–≤–µ - <a href='{settings.PROMO_URL}'>ASIAN KINGS</a>. –ñ–¥–µ–º —Ç–µ–±—è "
        f"–∫–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É!",
        f"–í–ª–∏–≤–∞–π—Å—è –≤ —Å–µ–º—å—é <a href='{settings.PROMO_URL}'>ASIAN KINGS</a> - –≥–¥–µ –∫–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É –ø—Ä–æ–≤–æ–¥—è—Ç –±–æ–º–±–µ–∑–Ω—ã–µ "
        f"–≤–µ—á–µ—Ä–∏–Ω–∫–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã!",
        f"<a href='{settings.PROMO_URL}'>ASIAN KINGS</a> - –µ–¥–∏–Ω—Å—Ç–≤–æ –Ω–∞—Ü–∏–π –∏ –¥—Ä—É–∂–±–∞ –Ω–∞—Ä–æ–¥–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º —Ç–∞–Ω—Ü–ø–æ–ª–µ –∫–∞–∂–¥—É—é "
        f"—Å—É–±–±–æ—Ç—É!",
        f"<a href='{settings.PROMO_URL}'>ASIAN KINGS</a> - —Ç–∞–º, –≥–¥–µ –≤—Å–µ —Å–≤–æ–∏!",
        f"Damn, —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –ø–æ–≤–µ–∑–ª–æ! –¢—ã –ø–æ–ª—É—á–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø—Ä–æ—Ö–æ–¥–∫—É –Ω–∞ <a href='{settings.PROMO_URL}'>ASIAN "
        f"KINGS</a> –≤ —ç—Ç—É —Å—É–±–±–æ—Ç—É, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É –Ω–∞ –≤—Ö–æ–¥–µ!",
        f"–ó–Ω–∞–∫–æ–º—å—Ç–µ—Å—å, –ª–∏—Å—Ç–∞–π—Ç–µ –º–µ–º—á–∏–∫–∏ –∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∏ –æ—Ç <a href='{settings.PROMO_URL}'>Asian Kings</a>!"
    ])


def q_boys() -> str:
    return random.choice(["–ü–æ –ø–∞—Ä–Ω—è–º, –∑–Ω–∞—á–∏—Ç...)", "–¢—ã —á—Ç–æ, –≥–µ–π... –ü—Ä–∏–∫–æ–ª—å–Ω–æ)", "–ê—Ö —Ç—ã, —à–∞–ª—É–Ω)))"])


def q_girls() -> str:
    return random.choice(["–ó–Ω–∞—á–∏—Ç –ø–æ –¥–µ–≤—á–æ–Ω–∫–∞–º...)", "–ü–æ–¥—Ä—É–≥ –∏—â–µ—à—å, –∏–ª–∏ –Ω–µ —Å–æ–≤—Å–µ–º?)", "–¢–æ–ª—å–∫–æ –Ω–µ —à–∞–ª–∏...)"])


def liked(a: SUser) -> str:
    count = len(a.liked)
    if count == 1:
        return random.choice(["–ö—Ç–æ-—Ç–æ —Ç–æ–±–æ–π –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è", "–ü—Å—Å, —Ç–µ–±—è –ª–∞–π–∫–Ω—É–ª–∏)"])
    elif a.interest == '–ü–∞—Ä–Ω–∏':
        return f"{a.name}, {count} –ø–∞—Ä–Ω–µ–π –∏–∑ –ú–æ—Å–∫–≤—ã —Ö–æ—Ç—è—Ç —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"
    elif a.interest == '–î–µ–≤—É—à–∫–∏':
        return f"{a.name}, {count} –¥–µ–≤—É—à–µ–∫ –∏–∑ –ú–æ—Å–∫–≤—ã —Ö–æ—Ç—è—Ç —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"


def like_list(a: SUser) -> str:
    return random.choice(["–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:",
                          "–°–º–æ—Ç—Ä–∏, –∫—Ç–æ —Ç–æ–±–æ–π –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è!",
                          "–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Å —Ç–æ–±–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"
                          ]) + (f" (–∏ –µ—â–µ {len(a.liked) - 1})" if len(a.liked) > 1 else "") + "\n\n"


def cap(a: SUser) -> str:
    if a.text == '':
        return f"{a.name}, {a.age}"
    else:
        return f"{a.name}, {a.age}, {a.text}"


def adm_cap(a: SUser, tag: str) -> str:
    text = f"#{tag} {cap(a)}\n\n" \
           f"{'active' if a.visible else 'inactive'} / {'disabled' if a.banned else 'enabled'}\n" \
           f"Last entry: {a.active_date.date()}"
    return text


def miss_u() -> str:
    return random.choice(["–¢—ã –≥–¥–µ? –Ø —É–∂–µ —Å–æ—Å–∫—É—á–∏–ª–∞—Å—å, –¥–∞–≤–∞–π –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è!)\n\n–ê –ø–æ–∫–∞ —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –±—É–¥–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞",
                          "–Ø –ø–æ–∫–∞ –æ—Ç–∫–ª—é—á–∏–ª–∞ —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É, –≤–∫–ª—é—á—É –∫–∞–∫ —Ä–µ—à–∏—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å)",
                          "–•–µ–π? –¢–µ–±—è –¥–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–Ω–æ(\n\n–ü–æ–∫–∞ –æ—Ç–∫–ª—é—á—É —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É, –≤–∫–ª—é—á—É –∫–∞–∫ —Ä–µ—à–∏—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å)"])


def daily_miss_u() -> str:
    return random.choice(["–ù–æ–≤—ã–π –¥–µ–Ω—å –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞! –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, —Ç–µ–±—è —É–∂–µ –∂–¥—É—Ç!",
                          "–•–µ–π! –ü—Ä–æ–¥–æ–ª–∂–∏–º –ª–∏—Å—Ç–∞—Ç—å –∞–Ω–∫–µ—Ç—ã?"])


def day_fact() -> str:
    fact = [
        "–°–ª–æ–≤–æ ¬´—Å–∞–º–±–∞¬ª –æ–∑–Ω–∞—á–∞–µ—Ç ¬´—Ç–µ—Ä–µ—Ç—å—Å—è –ø—É–ø–∫–∞–º–∏¬ª.",
        "–ö–µ—Ç—á—É–ø –≤—ã—Ç–µ–∫–∞–µ—Ç –∏–∑ –±—É—Ç—ã–ª–∫–∏ —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é 30 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ –≥–æ–¥.",
        "–†–µ–∫–æ—Ä–¥–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—ë—Ç–∞ –∫—É—Ä–∏—Ü—ã ‚Äì 13 —Å–µ–∫—É–Ω–¥.",
        "–ö–æ—Ä–æ–≤—ã –º—ã—á–∞—Ç —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º.",
        "–ó–Ω–∞–∫–æ–º–æ —Ç–æ —á—É–≤—Å—Ç–≤–æ, –∫–æ–≥–¥–∞ —Ç–≤–æ–π —è–∑—ã–∫ –ø–æ–∫–∞–ª—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ –∞–Ω–∞–Ω–∞—Å–∞? –í –∞–Ω–∞–Ω–∞—Å–µ –µ—Å—Ç—å —Ñ–µ—Ä–º–µ–Ω—Ç, –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞—é—â–∏–π –¥—Ä—É–≥–∏–µ "
        "–±–µ–ª–∫–∏. –¢–∞–∫ —á—Ç–æ –∫–æ–≥–¥–∞ —Ç—ã –µ—à—å –∞–Ω–∞–Ω–∞—Å, –∞–Ω–∞–Ω–∞—Å –µ—Å—Ç —Ç–µ–±—è.",
        "–ö–æ—Ä–æ–≤–∞ –º–æ–∂–µ—Ç –ø–æ–¥–Ω—è—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç —Å–ø—É—Å—Ç–∏—Ç—å—Å—è.",
        "–í –º–∏—Ä–µ –≤—Å–µ–≥–æ 7% –ª–µ–≤—à–µ–π.",
        "–í –ø–∏–≤–µ –º–∞–ª–æ –≤–∏—Ç–∞–º–∏–Ω–æ–≤. –ü–æ —ç—Ç–æ–º—É –ø–∏–≤–æ –Ω—É–∂–Ω–æ –ø–∏—Ç—å –º–Ω–æ–≥–æ",
        "–í –∞–ª—Ñ–∞–≤–∏—Ç–µ 32 –±—É–∫–≤—ã. –ü–æ–¥—É–º–∞–π –æ–± —ç—Ç–æ–º, –µ—Å–ª–∏ —Ç–≤–æ–π –ø–ª–∞–Ω –ë –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç",
        "–ß—Ç–æ–±—ã –Ω–µ —Å–∏–¥–µ—Ç—å –±–µ–∑ –¥–µ–Ω–µ–≥ - –ø—Ä–∏–ª—è–≥",
        "–í—Å–µ –≥—Ä–∏–±—ã —Å—ä–µ–¥–æ–±–Ω—ã. –ü—Ä–æ—Å—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ ‚Äî –æ–¥–∏–Ω —Ä–∞–∑.",
        "–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –¥–µ–≤—É—à–∫–∏ —É–º–µ—é—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç—ã. –ì—Ä—É–ø–ø–∞–º–∏. –ß–µ–ª–æ–≤–µ–∫ –ø–æ 40.",
        "–°–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ - –∞–∑–∏–∞—Ç. –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ."
    ]
    return "–§–∞–∫—Ç –¥–Ω—è:\n\n" + random.choice(fact)


def has_private_forwards() -> str:
    return "‚ùóÔ∏è–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∏–∑-–∑–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤ Telegram.\n" \
           "üòü –¢–µ–±–µ –Ω–µ –º–æ–≥—É—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –ª—é–¥–∏ —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —É —Ç–µ–±—è –≤–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è.\n\n" \
           "‚ù§Ô∏è –ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–∑–º–µ–Ω–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤ Telegram:\n" \
           "üëâ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å ‚Üí –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ‚Üí –ö—Ç–æ –º–æ–∂–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è... ‚Üí –í—Å–µ"


def bad_request() -> str:
    return "–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º—ç—Ç—á, –Ω–æ —Ç–≤–æ–π —á–µ–ª–æ–≤–µ—á–µ–∫ –Ω–µ –º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–ø–∏—Å–∞—Ç—å(\n\n" + has_private_forwards()


def text_invalid(text: str) -> bool:
    count = 1
    for i in range(1, len(text)):
        if text[i] == text[i - 1]:
            count += 1
            if count >= 4:
                return True
    if len(text) < 8:
        return True
    return False


def name_invalid(name: str) -> bool:
    count = 1
    for i in range(1, len(name)):
        if name[i] == name[i - 1]:
            count += 1
            if count >= 3:
                return True
    return False
